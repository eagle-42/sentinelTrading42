[project]
name = "sentinel42"
version = "2.0.0"
description = "Trading Algorithmique TDD avec Fusion Adaptative Prix/Sentiment"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Sentinel Team", email = "team@sentinel.ai"}
]
keywords = ["trading", "algorithmic", "lstm", "sentiment", "finbert", "tdd"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core dependencies
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    # Deep Learning
    # Optional ML deps moved to [project.optional-dependencies].ml
    # Data processing
    "pyarrow>=12.0.0",
    # Financial data
    "yfinance==0.2.28",
    # Web scraping and APIs
    "requests>=2.31.0",
    "feedparser>=6.0.0",
    "newsapi-python>=0.2.0",
    # Configuration and utilities
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    # Orchestration
    "prefect>=3.0.0",
    # Visualization
    # Visualization libs moved to optional extras `gui`
    # Web frameworks
    # UI frameworks moved to optional extras `gui`
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytz>=2025.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    # Notebooks
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.25.0",
    "seaborn>=0.12.0",
]

ml = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "huggingface-hub>=0.13.0",
]

gui = [
    "streamlit>=1.50.0",
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/sentinel/sentinel42"
Documentation = "https://sentinel42.readthedocs.io"
Repository = "https://github.com/sentinel/sentinel42"
Issues = "https://github.com/sentinel/sentinel42/issues"

[project.scripts]
sentinel42 = "src.cli:main"
sentinel42-gui = "src.gui.sentinel_ui:main"
sentinel42-crawl = "src.data.crawler:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["src/tests", "tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "crawler: marks tests as crawler tests",
    "model: marks tests as model tests",
]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/tests/*",
    "src/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "feedparser.*",
    "newsapi.*",
    "ta.*",
    "transformers.*",
    "torch.*",
    "sklearn.*",
    "streamlit.*",
    "plotly.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
